1.Robot is a Java Class
2.Selenium-based test automation framework uses it for simulating the keyboard and mouse events.
3.It can automate desktop popups also.
4.To handle native OS pop-ups we need Robot class.
5.Example:
	For instance, if you are trying to download Email Attachment, Windows pop-up, 
    'Save Attachment' prompts to specify Download Location, appears. It is nothing 
	but a native OS pop-up.
6.Desktop windows pop-up will not have locators so actions class cannot help.

ROBOT:
	1. This class is used to generate native system input events.
	2. This class uses native system events to control the mouse and keyboard.
	3. Pre-defined methods : keyPress(), keyRelease(), mousePress()
						     mouseMove(), mouseRelease(), mouseWheel()
						     delay(), createScreenCapture().
						     
** While using ROBOT class better to used try- catch block. They usually throw checked exceptions
   like AWTExceptions
   
   
Robot KeyPress and KeyRelease :

		try {
			Robot robot = new Robot();
			robot.keyPress(KeyEvent.VK_ENTER); //enter key on keyboard
			robot.keyRelease(KeyEvent.VK_ENTER);
		}catch(AWTException e) {
			e.printStackTrace();
		}
		
		***Robot class throws checked exceptions - AWTExceptions so better write this line 
		   of code inside try-catch.
		   
Robot Screen shot : 2 ways : 1. Rectangle and 2. Dimension
			Taking Screenshot using Rectangle
			
			Robot robot = new Robot();
			Rectangle rectangle = new Rectangle(25, 50, 1000, 300);
			BufferedImage srcImage = robot.createScreenCapture(rectangle); // takes the screen shot
			ImageIO.write(srcImage, "PNG", new File("./screenshots/robot.png"));
			
			
			Rectangle is a class. And the method take parameters like x,y,width and height.
			ImageIO is to write image into a particular location.
			Create a folder by name "screenshots" at project level.
			
			
			
		    Taking Screenshot using Dimension
		    (to take screenshots of the visible screen then )
		    
			Dimension d= Toolkit.getDefaultToolkit().getScreenSize();
			Rectangle rectangle2 = new Rectangle(d);
			BufferedImage srcFile2 = robot.createScreenCapture(rectangle2);
			ImageIO.write(srcFile2, "PNG", new File("./screenshots/robot2.png"));
			
			
			
			